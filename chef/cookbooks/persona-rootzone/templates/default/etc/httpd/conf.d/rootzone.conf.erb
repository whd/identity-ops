LoadModule ssl_module modules/mod_ssl.so
Listen 443

SSLPassPhraseDialog  builtin
#SSLSessionCache         shmcb:/var/cache/mod_ssl/scache(512000)
LoadModule socache_shmcb_module modules/mod_socache_shmcb.so
LoadModule slotmem_shm_module modules/mod_slotmem_shm.so
SSLSessionCache        "shmcb:/var/run/ssl_scache(512000)"
SSLSessionCacheTimeout  300
#SSLMutex default

SSLRandomSeed startup file:/dev/urandom  256
SSLRandomSeed connect builtin
SSLCryptoDevice builtin

LoadModule proxy_module modules/mod_proxy.so
#LoadModule proxy_connect_module modules/mod_proxy_connect.so
#LoadModule proxy_ftp_module modules/mod_proxy_ftp.so
LoadModule proxy_http_module modules/mod_proxy_http.so
LoadModule proxy_ajp_module modules/mod_proxy_ajp.so
LoadModule proxy_balancer_module modules/mod_proxy_balancer.so
LoadModule rewrite_module modules/mod_rewrite.so

#<VirtualHost _default_:443>
#    ErrorLog logs/ssl_error_log
#    TransferLog logs/ssl_access_log
#    LogLevel warn
#    SSLEngine on
#    SSLProxyEngine on
#    SSLProtocol all -SSLv2
#    SSLCipherSuite HIGH:MEDIUM:!aNULL:!MD5
#    SSLCompression off

#    # default
#      SSLCertificateFile /etc/pki/tls/certs/localhost.crt
#      SSLCertificateKeyFile /etc/pki/tls/private/localhost.key
#</VirtualHost>

<% node[:persona][:rootzone].each do |x| %>
<VirtualHost <%= x[:ip][node[:aws_region]] %>:443>
    # <%= x[:external_ip][node[:aws_region]] %>
    ErrorLog logs/ssl_error_log
    TransferLog logs/ssl_access_log
    LogLevel warn
    SSLEngine on
    SSLProxyEngine on
    SSLProtocol all -SSLv2
    SSLCipherSuite HIGH:MEDIUM:!aNULL:!MD5

    # <%= x[:cert][:cert_name] %>
<% case x[:cert][:cert_name]
when "www.browserid.org" %>
  <%= "    ServerName browserid.org" %>
<% when "multisan-www.persona.org" %>
  <%= "    ServerName persona.org" %>
<% when "wildcard.diresworb.org" %>
  <%= "    ServerName diresworb.org" %>
<% when "wildcard.anosrep.org" %>
  <%= "    ServerName anosrep.org" %>
<% end %>
      SSLCertificateFile /etc/pki/tls/certs/<%= x[:cert][:cert_name] %>.crt
      SSLCertificateKeyFile /etc/pki/tls/private/<%= x[:cert][:cert_name] %>.key
      SSLCertificateChainFile /etc/pki/tls/certs/<%= x[:cert][:cert_name] %>.chain.crt

    SSLProxyCACertificateFile /etc/pki/tls/cert.pem
    SSLProxyCheckPeerCN off
    
    SetEnvIf User-Agent ".*MSIE.*" \
             nokeepalive ssl-unclean-shutdown \
             downgrade-1.0 force-response-1.0
    
    CustomLog logs/ssl_request_log \
              "%t %h %{SSL_PROTOCOL}x %{SSL_CIPHER}x \"%r\" %b"

    ProxyRequests Off
    ProxyPreserveHost On

    <Proxy *>
        Order deny,allow
        Allow from all
    </Proxy>

    ProxyPass / <%= x[:url] %> disablereuse=On
    <Location />
        Order allow,deny
        Allow from all
    </Location>

    RewriteEngine on
    RewriteCond %{REQUEST_METHOD} !^POST$
    RewriteRule ^/(.*)         <%= x[:url] %>$1 [L,R=301]

</VirtualHost>

<VirtualHost <%= x[:ip][node[:aws_region]] %>:80>  
    # <%= x[:external_ip][node[:aws_region]] %>
<% case x[:cert][:cert_name]
when "www.browserid.org" %>
  <%= "    ServerName browserid.org" %>
<% when "multisan-www.persona.org" %>
  <%= "    ServerName persona.org" %>
<% when "wildcard.diresworb.org" %>
  <%= "    ServerName diresworb.org" %>
<% when "wildcard.anosrep.org" %>
  <%= "    ServerName anosrep.org" %>
<% end %>

    RewriteEngine on
    RewriteCond %{REQUEST_METHOD} ^POST$
    # This should be a 404 instead of 403 ( https://github.com/fmarier/checkurl/blob/no_security_improvements/check-persona-url.py#L217 )
    RewriteRule ^/(.*)         / [L,F]

    RewriteEngine on
    RewriteCond %{REQUEST_METHOD} !^POST$
    RewriteRule ^/(.*)         <%= x[:url] %>$1 [L,R=301]
</VirtualHost>

<% end %>